{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w2021\\\\Desktop\\\\MosaicMind\\\\MosaicMind_Web\\\\src\\\\pages\\\\Machines.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Machine from './Machine';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Machines() {\n  _s();\n  const URL = `https://mosaicmind-web.onrender.com/get-counts`;\n  const [machines, setMachines] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(URL);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const json = await response.json();\n        setMachines(json);\n      } catch (error) {\n        console.error('Failed to fetch:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-1\",\n      children: \"Choose a Machine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"machines\",\n      children: [/*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 1\",\n        status: \"Online\",\n        updates: machines['r1-update-c'],\n        positiveFeedback: machines['r1-correct-c'],\n        negativeFeedback: machines['r1-fail-c'],\n        successRate: 87\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 2\",\n        status: \"Online\",\n        updates: machines['r2-update-c'],\n        positiveFeedback: machines['r2-correct-c'],\n        negativeFeedback: machines['r2-fail-c'],\n        successRate: 75\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 3\",\n        status: \"Online\",\n        updates: machines['r3-update-c'],\n        positiveFeedback: machines['r3-correct-c'],\n        negativeFeedback: machines['r3-fail-c'],\n        successRate: 52\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 4\",\n        status: \"Online\",\n        updates: machines['r4-update-c'],\n        positiveFeedback: machines['r4-correct-c'],\n        negativeFeedback: machines['r4-fail-c'],\n        successRate: 92\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-1\",\n      children: \"MosaicMind V1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Machines, \"etL6ZTbqU58vGaTbtLSSX9BCKmI=\");\n_c = Machines;\nvar _c;\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"names":["useEffect","useState","Machine","jsxDEV","_jsxDEV","Fragment","_Fragment","Machines","_s","URL","machines","setMachines","fetchData","response","fetch","ok","Error","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","status","updates","positiveFeedback","negativeFeedback","successRate","_c","$RefreshReg$"],"sources":["C:/Users/w2021/Desktop/MosaicMind/MosaicMind_Web/src/pages/Machines.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Machine from './Machine';\r\n\r\nexport default function Machines() {\r\n\r\n\tconst URL = `https://mosaicmind-web.onrender.com/get-counts` \r\n\tconst [machines, setMachines] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(URL);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const json = await response.json();\r\n                setMachines(json);\r\n            } catch (error) {\r\n                console.error('Failed to fetch:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<div className=\"text-1\">Choose a Machine</div>\r\n\t\t\t<br />\r\n\t\t\t\t<div className=\"machines\">\r\n\t\t\t\t\t<Machine name=\"Machine 1\" status=\"Online\" updates={machines['r1-update-c']} positiveFeedback={machines['r1-correct-c']} negativeFeedback={machines['r1-fail-c']} successRate={87}/>\r\n\t\t\t\t\t<Machine name=\"Machine 2\" status=\"Online\" updates={machines['r2-update-c']} positiveFeedback={machines['r2-correct-c']} negativeFeedback={machines['r2-fail-c']} successRate={75}/>\r\n\t\t\t\t\t<Machine name=\"Machine 3\" status=\"Online\" updates={machines['r3-update-c']} positiveFeedback={machines['r3-correct-c']} negativeFeedback={machines['r3-fail-c']} successRate={52}/>\r\n\t\t\t\t\t<Machine name=\"Machine 4\" status=\"Online\" updates={machines['r4-update-c']} positiveFeedback={machines['r4-correct-c']} negativeFeedback={machines['r4-fail-c']} successRate={92}/>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div className=\"text-1\">MosaicMind V1</div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}