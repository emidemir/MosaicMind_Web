{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w2021\\\\Desktop\\\\MosaicMind\\\\MosaicMind_Web\\\\src\\\\pages\\\\Machines.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Machine from './Machine';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Machines() {\n  _s();\n  const URL = `https://mosaicmind-web.onrender.com/get-counts`;\n  const [machines, setMachines] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(URL);\n      result.json.then(json => {\n        console.log(result);\n        setMachines(json);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-1\",\n      children: \"Choose a Machine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"machines\",\n      children: [/*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 1\",\n        status: \"Online\",\n        updates: 10,\n        positiveFeedback: 452,\n        negativeFeedback: 63,\n        successRate: 87\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 2\",\n        status: \"Offline\",\n        updates: 8,\n        positiveFeedback: 300,\n        negativeFeedback: 50,\n        successRate: 75\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 3\",\n        status: \"Online\",\n        updates: 5,\n        positiveFeedback: 200,\n        negativeFeedback: 95,\n        successRate: 52\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Machine, {\n        name: \"Machine 4\",\n        status: \"Offline\",\n        updates: 12,\n        positiveFeedback: 480,\n        negativeFeedback: 30,\n        successRate: 92\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-1\",\n      children: \"MosaicMind V1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Machines, \"etL6ZTbqU58vGaTbtLSSX9BCKmI=\");\n_c = Machines;\nvar _c;\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"names":["useEffect","useState","Machine","jsxDEV","_jsxDEV","Fragment","_Fragment","Machines","_s","URL","machines","setMachines","fetchData","result","fetch","json","then","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","status","updates","positiveFeedback","negativeFeedback","successRate","_c","$RefreshReg$"],"sources":["C:/Users/w2021/Desktop/MosaicMind/MosaicMind_Web/src/pages/Machines.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Machine from './Machine';\r\n\r\nexport default function Machines() {\r\n\r\n\tconst URL = `https://mosaicmind-web.onrender.com/get-counts` \r\n\tconst [machines, setMachines] = useState([]);\r\n\r\n\tuseEffect( () => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst result = await fetch(URL)\r\n\t\t\tresult.json.then(json => {\r\n\t\t\t\tconsole.log(result)\r\n\t\t\t\tsetMachines(json);\r\n\t\t\t})\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n    return (\r\n        <>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<div className=\"text-1\">Choose a Machine</div>\r\n\t\t\t<br />\r\n\t\t\t\t<div className=\"machines\">\r\n\t\t\t\t\t<Machine name=\"Machine 1\" status=\"Online\" updates={10} positiveFeedback={452} negativeFeedback={63} successRate={87}/>\r\n\t\t\t\t\t<Machine name=\"Machine 2\" status=\"Offline\" updates={8} positiveFeedback={300} negativeFeedback={50} successRate={75}/>\r\n\t\t\t\t\t<Machine name=\"Machine 3\" status=\"Online\" updates={5} positiveFeedback={200} negativeFeedback={95} successRate={52}/>\r\n\t\t\t\t\t<Machine name=\"Machine 4\" status=\"Offline\" updates={12} positiveFeedback={480} negativeFeedback={30} successRate={92}/>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div className=\"text-1\">MosaicMind V1</div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}